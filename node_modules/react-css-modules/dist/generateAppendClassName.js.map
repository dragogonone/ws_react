{"version":3,"sources":["generateAppendClassName.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAI,uBAAJ;;AAEA,cAAc,sBAAd;;kBAEe,UAAC,MAAD,EAAS,UAAT,EAAoC,iBAApC,EAA2E;AACtF,QAAI,2BAAJ;QACI,qBADJ;QAEI,0BAFJ,CADsF;;AAKtF,qBAAiB,YAAY,GAAZ,CAAgB,MAAhB,CAAjB,CALsF;;AAOtF,QAAI,cAAJ,EAAoB;AAChB,YAAI,0BAAJ,CADgB;;AAGhB,yBAAiB,eAAe,GAAf,CAAmB,UAAnB,CAAjB,CAHgB;;AAKhB,YAAI,cAAJ,EAAoB;AAChB,mBAAO,cAAP,CADgB;SAApB;KALJ,MAQO;AACH,yBAAiB,YAAY,GAAZ,CAAgB,MAAhB,EAAwB,sBAAxB,CAAjB,CADG;KARP;;AAYA,sBAAkB,EAAlB,CAnBsF;;AAqBtF,SAAK,SAAL,IAAkB,UAAlB,EAA8B;AAC1B,YAAI,qBAAJ,CAD0B;;AAG1B,oBAAY,OAAO,WAAW,SAAX,CAAP,CAAZ,CAH0B;;AAK1B,YAAI,SAAJ,EAAe;AACX,+BAAmB,MAAM,SAAN,CADR;SAAf,MAEO,IAAI,sBAAsB,IAAtB,EAA4B;AACnC,kBAAM,IAAI,KAAJ,CAAU,MAAM,WAAW,SAAX,CAAN,GAA8B,4BAA9B,CAAhB,CADmC;SAAhC;KAPX;;AAYA,sBAAkB,gBAAgB,IAAhB,EAAlB,CAjCsF;;AAmCtF,mBAAe,GAAf,CAAmB,UAAnB,EAA+B,eAA/B,EAnCsF;;AAqCtF,WAAO,eAAP,CArCsF;CAA3E","file":"generateAppendClassName.js","sourcesContent":["import Map from 'es6-map';\n\nlet stylesIndex;\n\nstylesIndex = new Map();\n\nexport default (styles, styleNames: Array<string>, errorWhenNotFound: boolean): string => {\n    let appendClassName,\n        styleName,\n        stylesIndexMap;\n\n    stylesIndexMap = stylesIndex.get(styles);\n\n    if (stylesIndexMap) {\n        let styleNameIndex;\n\n        styleNameIndex = stylesIndexMap.get(styleNames);\n\n        if (styleNameIndex) {\n            return styleNameIndex;\n        }\n    } else {\n        stylesIndexMap = stylesIndex.set(styles, new Map());\n    }\n\n    appendClassName = '';\n\n    for (styleName in styleNames) {\n        let className;\n\n        className = styles[styleNames[styleName]];\n\n        if (className) {\n            appendClassName += ' ' + className;\n        } else if (errorWhenNotFound === true) {\n            throw new Error('\"' + styleNames[styleName] + '\" CSS module is undefined.');\n        }\n    }\n\n    appendClassName = appendClassName.trim();\n\n    stylesIndexMap.set(styleNames, appendClassName);\n\n    return appendClassName;\n};\n"],"sourceRoot":"/source/"}