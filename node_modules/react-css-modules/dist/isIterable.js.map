{"version":3,"sources":["isIterable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,IAAI,2BAAJ;IACI,+BADJ;;AAGA,kBAAkB,0BAAa,MAAb,KAAwB,OAAO,QAAP;AAC1C,sBAAsB,YAAtB;;;;;;;;;kBAQe,UAAC,MAAD,EAAY;AACvB,QAAI,oBAAJ,CADuB;;AAGvB,QAAI,CAAC,wBAAW,MAAX,CAAD,EAAqB;AACrB,eAAO,KAAP,CADqB;KAAzB;;AAIA,QAAI,eAAJ,EAAqB;AACjB,mBAAW,OAAO,eAAP,CAAX,CADiB;KAArB,MAEO;AACH,mBAAW,OAAO,mBAAP,CAAX,CADG;KAFP;;AAMA,WAAO,0BAAa,QAAb,CAAP,CAbuB;CAAZ","file":"isIterable.js","sourcesContent":["import _ from 'lodash';\n\nlet ITERATOR_SYMBOL,\n    OLD_ITERATOR_SYMBOL;\n\nITERATOR_SYMBOL = _.isFunction(Symbol) && Symbol.iterator;\nOLD_ITERATOR_SYMBOL = '@@iterator';\n\n/**\n * @see https://github.com/lodash/lodash/issues/1668\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Object} target\n * @returns {boolean}\n */\nexport default (target) => {\n    let iterator;\n\n    if (!_.isObject(target)) {\n        return false;\n    }\n\n    if (ITERATOR_SYMBOL) {\n        iterator = target[ITERATOR_SYMBOL];\n    } else {\n        iterator = target[OLD_ITERATOR_SYMBOL];\n    }\n\n    return _.isFunction(iterator);\n};\n"],"sourceRoot":"/source/"}